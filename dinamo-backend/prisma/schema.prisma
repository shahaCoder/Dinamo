datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique
  name      String
  password  String
  role      String @default("user")
  userImage String @default("https://i.ibb.co/xtV29t9f/user.png")
}

model CurrentMatch {
  id            Int                       @id @default(autoincrement())
  homeTeamLogo  String?
  awayTeamLogo  String?
  homeTeamScore Int
  awayTeamScore Int
  matchDate     DateTime
  translations  CurrentMatchTranslation[]
}

model CurrentMatchTranslation {
  id       Int          @id @default(autoincrement())
  locale   String
  homeTeam String
  awayTeam String
  match    CurrentMatch @relation(fields: [matchId], references: [id], onDelete: Cascade)
  matchId  Int

  @@unique([matchId, locale])
}

enum TeamCategory {
  U19
  U21
  MAIN
}

model Player {
  id            Int                 @id @default(autoincrement())
  teamCategory  TeamCategory        @default(MAIN)
  number        Int
  birthDate     DateTime
  height        Float
  weight        Float
  goals         Int                 @default(0)
  assists       Int                 @default(0)
  matchesPlayed Int                 @default(0)
  imageUrl      String?
  yellowCards   Int                 @default(0)
  redCards      Int                 @default(0)
  translations  PlayerTranslation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlayerTranslation {
  id          Int    @id @default(autoincrement())
  locale      String
  firstName   String
  lastName    String
  position    String
  nationality String
  player      Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId    Int

  @@unique([playerId, locale])
}

model UpcomingMatch {
  id           Int                        @id @default(autoincrement())
  opponentLogo String?
  matchDate    DateTime
  isHomeGame   Boolean
  ticketLink   String?
  translations UpcomingMatchTranslation[]
  createdAt    DateTime                   @default(now())
  updatedAt    DateTime                   @updatedAt
}

model UpcomingMatchTranslation {
  id              Int           @id @default(autoincrement())
  locale          String // 'uz', 'ru', 'en'
  opponent        String
  stadium         String
  upcomingMatchId Int
  upcomingMatch   UpcomingMatch @relation(fields: [upcomingMatchId], references: [id], onDelete: Cascade)

  @@unique([upcomingMatchId, locale])
}

model News {
  id        Int      @id @default(autoincrement())
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments     Comment[]
  translations NewsTranslation[]
}

model NewsTranslation {
  id      Int    @id @default(autoincrement())
  title   String
  content String
  locale  String

  newsId Int
  news   News @relation(fields: [newsId], references: [id], onDelete: Cascade)

  @@unique([newsId, locale])
}

model Comment {
  id           Int                  @id @default(autoincrement())
  newsId       Int
  news         News                 @relation(fields: [newsId], references: [id], onDelete: Cascade)
  translations CommentTranslation[]
  createdAt    DateTime             @default(now())
}

model CommentTranslation {
  id      Int    @id @default(autoincrement())
  content String
  locale  String

  commentId Int
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)

  @@unique([commentId, locale])
}

// model PastMatch {
//   id            Int                    @id @default(autoincrement())
//   opponentLogo  String?
//   matchDate     DateTime
//   isHomeGame    Boolean
//   homeTeamScore Int
//   awayTeamScore Int
//   translations  PastMatchTranslation[]
//   createdAt     DateTime               @default(now())
//   updatedAt     DateTime               @updatedAt
// }
model PastMatch {
  id            Int                     @id @default(autoincrement())
  opponentLogo  String?
  matchDate     DateTime
  isHomeGame    Boolean
  homeTeamScore Int
  awayTeamScore Int
  tourNumber    Int?                   // üÜï —Ç—É—Ä
  attendance    Int?                   // üÜï –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å
  events        PastMatchEvent[]                  // üÜï —Å–æ–±—ã—Ç–∏—è (–≥–æ–ª—ã, –∑–∞–º–µ–Ω—ã, –∫–∞—Ä—Ç–æ—á–∫–∏)
  translations  PastMatchTranslation[]
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
}

model PastMatchTranslation {
  id       Int        @id @default(autoincrement())
  opponent    String
  pastMatchId Int
  stadium     String
  locale   String       
  referee  String?     // üÜï —Å—É–¥—å—è (–ø–µ—Ä–µ–≤–æ–¥–∏–º—ã–π) 
  league   String?     // üÜï –ª–∏–≥–∞ (–ø–µ—Ä–µ–≤–æ–¥–∏–º–∞—è)

  pastMatch    PastMatch  @relation(fields: [pastMatchId], references: [id], onDelete: Cascade)

  @@unique([pastMatchId, locale])
}


model PastMatchEvent {
  id          Int       @id @default(autoincrement())
  pastMatchId Int
  minute      String    // –ü—Ä–∏–º–µ—Ä: "80", "90+3"
  type        String    // –ü—Ä–∏–º–µ—Ä: "goal", "substitution", "red_card"
  playerName      String?  // –ò–º—è –∏–≥—Ä–æ–∫–∞ (–¥–ª—è –≥–æ–ª–∞ –∏–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏)
  assistName      String?  
  team        String?
  subbedIn    String?  // –í–æ—à–µ–¥—à–∏–π –∏–≥—Ä–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–º–µ–Ω—ã)
  subbedOut   String?
  pastMatch   PastMatch @relation(fields: [pastMatchId], references: [id], onDelete: Cascade)
}

model Coach {
  id           Int                @id @default(autoincrement())
  birthDate    DateTime
  experience   Int // –û–ø—ã—Ç —Ç—Ä–µ–Ω–µ—Ä–∞ –≤ –≥–æ–¥–∞—Ö
  coachImage   String?
  translations CoachTranslation[]
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
}

model CoachTranslation {
  id          Int    @id @default(autoincrement())
  firstName   String
  lastName    String
  nationality String
  locale      String

  coachId Int
  coach   Coach @relation(fields: [coachId], references: [id], onDelete: Cascade)

  @@unique([coachId, locale])
}